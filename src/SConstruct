#!python
openscad_binary = 'openscad-nightly'

import os

def openscad_emitter(target, source, env):
  if '.' in str(target[0]):
    targets = [str(target[0])]
  else:
    targets = [str(target[0]) + suffix for suffix in ['.png', '.stl']]
  if '.' in str(source[0]):
    sources = [str(source[0])]
  else:
    sources = [str(source[0]) + suffix for suffix in ['.scad']]
    return targets, sources


def openscad(target, source, env):
  part = str(target[0]).split("_")[-1].split(".")[0]
  for t in target:
    print(openscad_binary +
          ' -D \'$part="' + part + '"\'' +
          ' -D \'$fn=' + str(env['fn']) + '\'' +
          ' --viewall --autocenter --render' +
          ' -o ' + str(t) + ' ' + str(source[0]))
    os.system(openscad_binary +
              ' -D \'$part="' + part + '"\'' +
              ' -D \'$fn=' + str(env['fn']) + '\'' +
              ' --viewall --autocenter --render' +
              ' -o ' + str(t) + ' ' + str(source[0]))

openscad = Builder(
    action = openscad, emitter = openscad_emitter)
env = Environment(
    BUILDERS = {'Openscad': openscad})
env["fn"] = ARGUMENTS.get('fn', 10)

Export('env')
d = '.'
conscripts = [os.path.join(d,o,"SConscript") for o in os.listdir(d) if os.path.isfile(os.path.join(d,o,"SConscript"))]
SConscript(conscripts)
